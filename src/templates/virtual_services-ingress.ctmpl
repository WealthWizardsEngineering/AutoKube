{{- $namespace             := env "NAMESPACE" -}}
{{- $defaultDomain         := keyOrDefault (print "app_config_vars/global/config.json/" $namespace "/DOMAIN") "" -}}
{{- with ($namespace | split "-") -}}
{{- with index . 0 -}}
{{- $tenant                := (print . "/") | replaceAll (print $namespace "/") "" -}}
{{- range $applicationName, $variants := tree (print "deployment_registry/" $namespace) | byKey }}
{{- $configPath            := print "app_config_vars/" $tenant $applicationName ".json" -}}
{{- if (keyOrDefault (print $configPath "/create_ingress") "true" | parseBool) }}
{{- $contextRoute          := keyOrDefault (print $configPath "/" $namespace "/ConfigMap/CONTEXT_ROUTE") (keyOrDefault (print $configPath "/ConfigMap/CONTEXT_ROUTE") (print "/" $applicationName)) | regexReplaceAll "^/$" "" -}}
{{- $secondaryRoutes       := keyOrDefault (print $configPath "/" $namespace "/ConfigMap/SECONDARY_CONTEXT_ROUTES") (keyOrDefault (print $configPath "/ConfigMap/SECONDARY_CONTEXT_ROUTES") "") -}}
{{- $publicDomain          := keyOrDefault (print $configPath "/" $namespace "/hostname") $defaultDomain -}}
{{- scratch.MapSet (print $applicationName "-publicDomainList") $publicDomain $publicDomain -}}
{{- scratch.MapSet (print $applicationName "-publicDomainList") (print "*." $publicDomain) (print "*." $publicDomain) -}}
{{- if keyExists (print "app_config_vars/global/config.json/" $namespace "/SECONDARY_DOMAIN") -}}
{{- $secondaryDomain       := key (print "app_config_vars/global/config.json/" $namespace "/SECONDARY_DOMAIN") -}}
{{- scratch.MapSet (print $applicationName "-publicDomainList") $secondaryDomain $secondaryDomain -}}
{{- scratch.MapSet (print $applicationName "-publicDomainList") (print "*." $secondaryDomain) (print "*." $secondaryDomain) -}}
{{- end -}}
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{ $applicationName }}-ingress
spec:
  gateways:
    - default-gateway
  hosts:
{{- range $Key, $Value := scratch.Get (print $applicationName "-publicDomainList") }}
    - "{{ $Key }}"
{{- end }}
  http:
  {{- range $variants := $variants }}
  {{- $variant := .Key -}}
  {{- if and (ne $variant "master") (not (keyExists (print $configPath "/" $namespace "/versions/" $variant))) }}
  {{- if eq $contextRoute "" }}
    - headers:
        request:
          set:
            x-envoy-max-retries: "5"
            x-envoy-retry-on: connect-failure
            x-envoy-upstream-rq-timeout-ms: "0"
            x-variant-id: {{ $variant }}
      match:
        -
          authority:
{{- if keyExists (print "app_config_vars/global/config.json/" $namespace "/SECONDARY_DOMAIN") }}
            regex: ({{ $variant }}|{{ $variant |toLower }}).({{ $publicDomain }}|{{ key (print "app_config_vars/global/config.json/" $namespace "/SECONDARY_DOMAIN") }})
{{- else }}
            regex: ({{ $variant }}|{{ $variant |toLower }}).{{ $publicDomain }}
{{- end }}
      route:
        -
          destination:
            host: {{ $applicationName }}.{{ $namespace }}.svc.cluster.local
            subset: {{ $variant }}
    - headers:
        request:
          set:
            x-envoy-max-retries: "5"
            x-envoy-retry-on: connect-failure
            x-envoy-upstream-rq-timeout-ms: "0"
      match:
        -
          headers:
            x-variant-id:
              regex: ({{ $variant }}|{{ $variant |toLower }})
      route:
        -
          destination:
            host: {{ $applicationName }}.{{ $namespace }}.svc.cluster.local
            subset: {{ $variant }}
  {{- else }}
    - headers:
        request:
          set:
            x-envoy-max-retries: "5"
            x-envoy-retry-on: connect-failure
            x-envoy-upstream-rq-timeout-ms: "0"
            x-variant-id: {{ $variant }}
      match:
        -
          authority:
{{- if keyExists (print "app_config_vars/global/config.json/" $namespace "/SECONDARY_DOMAIN") }}
            regex: ({{ $variant }}|{{ $variant |toLower }}).({{ $publicDomain }}|{{ key (print "app_config_vars/global/config.json/" $namespace "/SECONDARY_DOMAIN") }})
{{- else }}
            regex: ({{ $variant }}|{{ $variant |toLower }}).{{ $publicDomain }}
{{- end }}
          uri:
            regex: ^{{ $contextRoute }}(/.*)?$
          {{- if $secondaryRoutes }}
          {{- range ($secondaryRoutes | split ",") }}
        -
          authority:
{{- if keyExists (print "app_config_vars/global/config.json/" $namespace "/SECONDARY_DOMAIN") }}
            regex: ({{ $variant }}|{{ $variant |toLower }}).({{ $publicDomain }}|{{ key (print "app_config_vars/global/config.json/" $namespace "/SECONDARY_DOMAIN") }})
{{- else }}
            regex: ({{ $variant }}|{{ $variant |toLower }}).{{ $publicDomain }}
{{- end }}
          uri:
            regex: ^{{ . }}(/.*)?$
          {{- end }}
          {{- end }}
      route:
        -
          destination:
            host: {{ $applicationName }}.{{ $namespace }}.svc.cluster.local
            subset: {{ $variant }}
    - headers:
        request:
          set:
            x-envoy-max-retries: "5"
            x-envoy-retry-on: connect-failure
            x-envoy-upstream-rq-timeout-ms: "0"
      match:
        -
          uri:
            regex: ^{{ $contextRoute }}(/.*)?$
          headers:
            x-variant-id:
              regex: ({{ $variant }}|{{ $variant | toLower }})
          {{- if $secondaryRoutes }}
          {{- range ($secondaryRoutes | split ",") }}
        -
          uri:
            regex: ^{{ . }}(/.*)?$
          headers:
            x-variant-id:
              regex: ({{ $variant }}|{{ $variant | toLower }})
          {{- end }}
          {{- end }}
      route:
        -
          destination:
            host: {{ $applicationName }}.{{ $namespace }}.svc.cluster.local
            subset: {{ $variant }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- range tree (print $configPath "/" $namespace "/versions/") }}
    - headers:
        request:
          set:
            x-envoy-max-retries: "5"
            x-envoy-retry-on: connect-failure
            x-envoy-upstream-rq-timeout-ms: "0"
      match:
        -
          uri:
            regex: ^{{ $contextRoute }}/{{ .Key }}(/.*)?$
      route:
        -
          destination:
            host: {{ $applicationName }}.{{ $namespace }}.svc.cluster.local
            subset: {{ .Key }}
  {{- end }}
  {{- if eq $contextRoute "" }}
    - headers:
        request:
          set:
            x-envoy-max-retries: "5"
            x-envoy-retry-on: connect-failure
            x-envoy-upstream-rq-timeout-ms: "0"
      route:
        -
          destination:
            host: {{ $applicationName }}.{{ $namespace }}.svc.cluster.local
            subset: master
  {{- else }}
    - headers:
        request:
          set:
            x-envoy-max-retries: "5"
            x-envoy-retry-on: connect-failure
            x-envoy-upstream-rq-timeout-ms: "0"
      match:
        -
          uri:
            regex: ^{{ $contextRoute }}(/.*)?$
        {{- if $secondaryRoutes }}
        {{- range ($secondaryRoutes | split ",") }}
        -
          uri:
            regex: ^{{ . }}(/.*)?$
          {{- end }}
          {{- end }}
      route:
        -
          destination:
            host: {{ $applicationName }}.{{ $namespace }}.svc.cluster.local
            subset: master
  {{- end }}
{{ end }}
{{- end -}}
{{- end }}
{{- end -}}
