{{- $context               := env "CONTEXT" -}}
{{- $defaultDomain         := key (print "app_config_vars/global/config.json/" $context "/DOMAIN") -}}
{{- $environment           := key (print "app_config_vars/global/config.json/" $context "/ENVIRONMENT") -}}
{{- $namespace             := key (print "app_config_vars/global/config.json/" $context "/NAMESPACE") -}}
{{- with ($namespace | split "-") -}}
{{- with index . 0 -}}
{{- $tenant                := (print . "/") | replaceAll (print $namespace "/") "" -}}
{{- range $applicationName, $variants := tree (print "deployment_registry/" $namespace) | byKey }}
{{- $configPath            := print "app_config_vars/" $tenant $applicationName ".json" -}}
{{- if (keyOrDefault (print $configPath "/create_ingress") "true" | parseBool) }}
{{- $publicDomain          := keyOrDefault (print $configPath "/" $environment "/hostname") $defaultDomain -}}
{{- $contextRoute          := keyOrDefault (print $configPath "/" $environment "/ConfigMap/CONTEXT_ROUTE") (print "/" $applicationName) -}}
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{ $applicationName }}-ingress
spec:
  gateways:
    - default-gateway
  hosts:
    - {{ $publicDomain }}
    - "*.{{ $publicDomain }}"
  http:
  {{- range $variants := $variants }}
  {{- if ne .Key "master" }}
  {{- if eq $contextRoute "/" }}
    -
      appendHeaders:
        x-envoy-max-retries: "5"
        x-envoy-retry-on: connect-failure
        x-envoy-upstream-rq-timeout-ms: "0"
        x-variant-id: {{ .Key }}
      match:
        -
          authority:
            regex: ({{ .Key }}|{{ .Key |toLower }}).{{ $publicDomain }}
      route:
        -
          destination:
            host: {{ $applicationName }}.{{ $namespace }}.svc.cluster.local
            subset: {{ .Key }}
    -
      appendHeaders:
        x-envoy-max-retries: "5"
        x-envoy-retry-on: connect-failure
        x-envoy-upstream-rq-timeout-ms: "0"
      match:
        -
          headers:
            x-variant-id:
              regex: ({{ .Key }}|{{ .Key |toLower }})
      route:
        -
          destination:
            host: {{ $applicationName }}.{{ $namespace }}.svc.cluster.local
            subset: {{ .Key }}
  {{- else }}
    -
      appendHeaders:
        x-envoy-max-retries: "5"
        x-envoy-retry-on: connect-failure
        x-envoy-upstream-rq-timeout-ms: "0"
        x-variant-id: {{ .Key }}
      match:
        -
          authority:
            regex: ({{ .Key }}|{{ .Key |toLower }}).{{ $publicDomain }}
          uri:
            regex: ^{{ $contextRoute }}(/.*)?$
      route:
        -
          destination:
            host: {{ $applicationName }}.{{ $namespace }}.svc.cluster.local
            subset: {{ .Key }}
    -
      appendHeaders:
        x-envoy-max-retries: "5"
        x-envoy-retry-on: connect-failure
        x-envoy-upstream-rq-timeout-ms: "0"
      match:
        -
          uri:
            regex: ^{{ $contextRoute }}(/.*)?$
          headers:
            x-variant-id:
              regex: ({{ .Key }}|{{ .Key | toLower }})
      route:
        -
          destination:
            host: {{ $applicationName }}.{{ $namespace }}.svc.cluster.local
            subset: {{ .Key }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- if eq $contextRoute "/" }}
    -
      appendHeaders:
        x-envoy-max-retries: "5"
        x-envoy-retry-on: connect-failure
        x-envoy-upstream-rq-timeout-ms: "0"
      route:
        -
          destination:
            host: {{ $applicationName }}.{{ $namespace }}.svc.cluster.local
            subset: master
  {{- else }}
    -
      appendHeaders:
        x-envoy-max-retries: "5"
        x-envoy-retry-on: connect-failure
        x-envoy-upstream-rq-timeout-ms: "0"
      match:
        -
          uri:
            regex: ^{{ $contextRoute }}(/.*)?$
      route:
        -
          destination:
            host: {{ $applicationName }}.{{ $namespace }}.svc.cluster.local
            subset: master
  {{- end }}
{{ end }}
{{- end -}}
{{- end }}
{{- end -}}